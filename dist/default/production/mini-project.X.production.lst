

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Mon Jul 31 15:57:06 2017

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F97J60
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  0002D6                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for _scan_code
    28  0002D6  EB                 	db	235
    29  0002D7  77                 	db	119
    30  0002D8  7B                 	db	123
    31  0002D9  7D                 	db	125
    32  0002DA  B7                 	db	183
    33  0002DB  BB                 	db	187
    34  0002DC  BD                 	db	189
    35  0002DD  D7                 	db	215
    36  0002DE  DB                 	db	219
    37  0002DF  DD                 	db	221
    38  0002E0  7E                 	db	126
    39  0002E1  BE                 	db	190
    40  0002E2  DE                 	db	222
    41  0002E3  EE                 	db	238
    42  0002E4  E7                 	db	231
    43  0002E5  ED                 	db	237
    44                           
    45                           ;initializer for clr_screen@F6532
    46  0002E6  1B                 	db	27
    47  0002E7  5B                 	db	91
    48  0002E8  32                 	db	50
    49  0002E9  4A                 	db	74
    50                           
    51                           ;initializer for cursor_home@F6537
    52  0002EA  1B                 	db	27
    53  0002EB  5B                 	db	91
    54  0002EC  32                 	db	50
    55  0002ED  48                 	db	72
    56  0000                     _BAUDCON1	set	3966
    57  0000                     _INTCONbits	set	4082
    58  0000                     _IPR1bits	set	3999
    59  0000                     _IPR3bits	set	4005
    60  0000                     _LATCbits	set	3979
    61  0000                     _LATD	set	3980
    62  0000                     _LATE	set	3981
    63  0000                     _LATHbits	set	3984
    64  0000                     _PIE1bits	set	3997
    65  0000                     _PIE3bits	set	4003
    66  0000                     _PIR1bits	set	3998
    67  0000                     _PIR3bits	set	4004
    68  0000                     _PORTD	set	3971
    69  0000                     _RCONbits	set	4048
    70  0000                     _RCSTA1bits	set	4011
    71  0000                     _RCSTAbits	set	4011
    72  0000                     _SPBRG1	set	4015
    73  0000                     _SSP1BUF	set	4041
    74  0000                     _SSP1CON1	set	4038
    75  0000                     _SSP1STATbits	set	4039
    76  0000                     _TRISCbits	set	3988
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISE	set	3990
    79  0000                     _TRISH	set	3993
    80  0000                     _TXREG1	set	4013
    81  0000                     _TXSTA1	set	4012
    82  0000                     _TXSTA1bits	set	4012
    83                           
    84                           ; #config settings
    85  0000                     
    86                           	psect	cinit
    87  000272                     __pcinit:
    88                           	opt stack 0
    89  000272                     start_initialization:
    90                           	opt stack 0
    91  000272                     __initialization:
    92                           	opt stack 0
    93                           
    94                           ; Clear objects allocated to COMRAM (4 bytes)
    95  000272  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
    96  000274  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
    97  000276  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
    98  000278  6A3C               	clrf	__pbssCOMRAM& (0+255),c
    99                           
   100                           ; Initialize objects allocated to COMRAM (24 bytes)
   101                           ; load TBLPTR registers with __pidataCOMRAM
   102  00027A  0ED6               	movlw	low __pidataCOMRAM
   103  00027C  6EF6               	movwf	tblptrl,c
   104  00027E  0E02               	movlw	high __pidataCOMRAM
   105  000280  6EF7               	movwf	tblptrh,c
   106  000282  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   107  000284  6EF8               	movwf	tblptru,c
   108  000286  EE00  F024         	lfsr	0,__pdataCOMRAM
   109  00028A  EE10 F018          	lfsr	1,24
   110  00028E                     copy_data0:
   111  00028E  0009               	tblrd		*+
   112  000290  CFF5 FFEE          	movff	tablat,postinc0
   113  000294  50E5               	movf	postdec1,w,c
   114  000296  50E1               	movf	fsr1l,w,c
   115  000298  E1FA               	bnz	copy_data0
   116  00029A                     end_of_initialization:
   117                           	opt stack 0
   118  00029A                     __end_of__initialization:
   119                           	opt stack 0
   120  00029A  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   121  00029C  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   122  00029E  0100               	movlb	0
   123  0002A0  EF77  F001         	goto	_main	;jump to C main() function
   124                           tblptru	equ	0xFF8
   125                           tblptrh	equ	0xFF7
   126                           tblptrl	equ	0xFF6
   127                           tablat	equ	0xFF5
   128                           postinc0	equ	0xFEE
   129                           postdec1	equ	0xFE5
   130                           fsr1l	equ	0xFE1
   131                           
   132                           	psect	bssCOMRAM
   133  00003C                     __pbssCOMRAM:
   134                           	opt stack 0
   135  00003C                     _counter:
   136                           	opt stack 0
   137  00003C                     	ds	2
   138  00003E                     _sec:
   139                           	opt stack 0
   140  00003E                     	ds	2
   141                           tblptru	equ	0xFF8
   142                           tblptrh	equ	0xFF7
   143                           tblptrl	equ	0xFF6
   144                           tablat	equ	0xFF5
   145                           postinc0	equ	0xFEE
   146                           postdec1	equ	0xFE5
   147                           fsr1l	equ	0xFE1
   148                           
   149                           	psect	dataCOMRAM
   150  000024                     __pdataCOMRAM:
   151                           	opt stack 0
   152  000024                     _scan_code:
   153                           	opt stack 0
   154  000024                     	ds	16
   155  000034                     clr_screen@F6532:
   156                           	opt stack 0
   157  000034                     	ds	4
   158  000038                     cursor_home@F6537:
   159                           	opt stack 0
   160  000038                     	ds	4
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           tblptrl	equ	0xFF6
   164                           tablat	equ	0xFF5
   165                           postinc0	equ	0xFEE
   166                           postdec1	equ	0xFE5
   167                           fsr1l	equ	0xFE1
   168                           
   169                           	psect	cstackBANK0
   170  000060                     __pcstackBANK0:
   171                           	opt stack 0
   172  000060                     delay_ms@i:
   173                           	opt stack 0
   174  000060                     delay_us@i:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x0
   178  000060                     	ds	2
   179  000062                     LCD8send@c:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x2
   183  000062                     	ds	1
   184                           tblptru	equ	0xFF8
   185                           tblptrh	equ	0xFF7
   186                           tblptrl	equ	0xFF6
   187                           tablat	equ	0xFF5
   188                           postinc0	equ	0xFEE
   189                           postdec1	equ	0xFE5
   190                           fsr1l	equ	0xFE1
   191                           
   192                           	psect	cstackCOMRAM
   193  000001                     __pcstackCOMRAM:
   194                           	opt stack 0
   195  000001                     ??_HighIsr:
   196  000001                     
   197                           ; 1 bytes @ 0x0
   198  000001                     	ds	14
   199  00000F                     ??_LowIsr:
   200                           
   201                           ; 1 bytes @ 0xE
   202  00000F                     	ds	17
   203  000020                     delay_ms@x:
   204                           	opt stack 0
   205  000020                     delay_us@x:
   206                           	opt stack 0
   207                           
   208                           ; 2 bytes @ 0x1F
   209  000020                     	ds	2
   210  000022                     ??_delay_ms:
   211  000022                     ??_delay_us:
   212                           
   213                           ; 1 bytes @ 0x21
   214  000022                     	ds	1
   215  000023                     LCD8send@mode:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x22
   219  000023                     	ds	1
   220  000024                     tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           postdec1	equ	0xFE5
   226                           fsr1l	equ	0xFE1
   227                           
   228                           ; 1 bytes @ 0x23
   229 ;;
   230 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   231 ;;
   232 ;; *************** function _main *****************
   233 ;; Defined at:
   234 ;;		line 31 in file "test.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2, status,0, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels required when called:    5
   254 ;; This function calls:
   255 ;;		_LCD8init
   256 ;;		_delay_ms
   257 ;; This function is called by:
   258 ;;		Startup code after reset
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text0
   263  0002EE                     __ptext0:
   264                           	opt stack 0
   265  0002EE                     _main:
   266                           	opt stack 26
   267                           
   268                           ;test.c: 32: LCD8init();
   269                           
   270                           ;incstack = 0
   271  0002EE  EC55  F000         	call	_LCD8init	;wreg free
   272                           
   273                           ;test.c: 33: delay_ms(1000);
   274  0002F2  0E03               	movlw	3
   275  0002F4  6E21               	movwf	delay_ms@x+1,c
   276  0002F6  0EE8               	movlw	232
   277  0002F8  6E20               	movwf	delay_ms@x,c
   278  0002FA  EC1B  F001         	call	_delay_ms	;wreg free
   279  0002FE  EF53  F000         	goto	start
   280  000302                     __end_of_main:
   281                           	opt stack 0
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           postinc0	equ	0xFEE
   287                           postdec1	equ	0xFE5
   288                           fsr1l	equ	0xFE1
   289                           
   290 ;; *************** function _LCD8init *****************
   291 ;; Defined at:
   292 ;;		line 11 in file "LCD8.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, status,2, status,0, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; Hardware stack levels required when called:    4
   313 ;; This function calls:
   314 ;;		_LCD8send
   315 ;;		_delay_ms
   316 ;; This function is called by:
   317 ;;		_main
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text1
   322  0000AA                     __ptext1:
   323                           	opt stack 0
   324  0000AA                     _LCD8init:
   325                           	opt stack 26
   326                           
   327                           ;LCD8.c: 13: TRISE = 0x00;
   328                           
   329                           ;incstack = 0
   330  0000AA  0E00               	movlw	0
   331  0000AC  6E96               	movwf	3990,c	;volatile
   332                           
   333                           ;LCD8.c: 14: TRISH = 0b11111000;
   334  0000AE  0EF8               	movlw	248
   335  0000B0  6E99               	movwf	3993,c	;volatile
   336                           
   337                           ;LCD8.c: 15: LATHbits.LATH1 = 0;
   338  0000B2  9290               	bcf	3984,1,c	;volatile
   339                           
   340                           ;LCD8.c: 16: LATHbits.LATH0 = 0;
   341  0000B4  9090               	bcf	3984,0,c	;volatile
   342                           
   343                           ;LCD8.c: 17: LATHbits.LATH2 = 0;
   344  0000B6  9490               	bcf	3984,2,c	;volatile
   345                           
   346                           ;LCD8.c: 18: delay_ms(200);
   347  0000B8  0E00               	movlw	0
   348  0000BA  6E21               	movwf	delay_ms@x+1,c
   349  0000BC  0EC8               	movlw	200
   350  0000BE  6E20               	movwf	delay_ms@x,c
   351  0000C0  EC1B  F001         	call	_delay_ms	;wreg free
   352                           
   353                           ;LCD8.c: 20: LCD8send(0x30,0);
   354  0000C4  0E00               	movlw	0
   355  0000C6  6E23               	movwf	LCD8send@mode,c
   356  0000C8  0E30               	movlw	48
   357  0000CA  ECFD  F000         	call	_LCD8send
   358                           
   359                           ;LCD8.c: 21: LCD8send(0x30,0);
   360  0000CE  0E00               	movlw	0
   361  0000D0  6E23               	movwf	LCD8send@mode,c
   362  0000D2  0E30               	movlw	48
   363  0000D4  ECFD  F000         	call	_LCD8send
   364                           
   365                           ;LCD8.c: 22: LCD8send(0x30,0);
   366  0000D8  0E00               	movlw	0
   367  0000DA  6E23               	movwf	LCD8send@mode,c
   368  0000DC  0E30               	movlw	48
   369  0000DE  ECFD  F000         	call	_LCD8send
   370                           
   371                           ;LCD8.c: 23: LCD8send(0x38,0);
   372  0000E2  0E00               	movlw	0
   373  0000E4  6E23               	movwf	LCD8send@mode,c
   374  0000E6  0E38               	movlw	56
   375  0000E8  ECFD  F000         	call	_LCD8send
   376                           
   377                           ;LCD8.c: 24: LCD8send(0x10,0);
   378  0000EC  0E00               	movlw	0
   379  0000EE  6E23               	movwf	LCD8send@mode,c
   380  0000F0  0E10               	movlw	16
   381  0000F2  ECFD  F000         	call	_LCD8send
   382                           
   383                           ;LCD8.c: 25: LCD8send(0x0F,0);
   384  0000F6  0E00               	movlw	0
   385  0000F8  6E23               	movwf	LCD8send@mode,c
   386  0000FA  0E0F               	movlw	15
   387  0000FC  ECFD  F000         	call	_LCD8send
   388                           
   389                           ;LCD8.c: 26: LCD8send(0x06,0);
   390  000100  0E00               	movlw	0
   391  000102  6E23               	movwf	LCD8send@mode,c
   392  000104  0E06               	movlw	6
   393  000106  ECFD  F000         	call	_LCD8send
   394                           
   395                           ;LCD8.c: 27: LCD8send(0x01,0);
   396  00010A  0E00               	movlw	0
   397  00010C  6E23               	movwf	LCD8send@mode,c
   398  00010E  0E01               	movlw	1
   399  000110  ECFD  F000         	call	_LCD8send
   400                           
   401                           ;LCD8.c: 28: delay_ms(100);
   402  000114  0E00               	movlw	0
   403  000116  6E21               	movwf	delay_ms@x+1,c
   404  000118  0E64               	movlw	100
   405  00011A  6E20               	movwf	delay_ms@x,c
   406  00011C  EC1B  F001         	call	_delay_ms	;wreg free
   407                           
   408                           ;LCD8.c: 30: LCD8send(0x8A,0);
   409  000120  0E00               	movlw	0
   410  000122  6E23               	movwf	LCD8send@mode,c
   411  000124  0E8A               	movlw	138
   412  000126  ECFD  F000         	call	_LCD8send
   413                           
   414                           ;LCD8.c: 32: LCD8send('N',1);
   415  00012A  0E01               	movlw	1
   416  00012C  6E23               	movwf	LCD8send@mode,c
   417  00012E  0E4E               	movlw	78
   418  000130  ECFD  F000         	call	_LCD8send
   419                           
   420                           ;LCD8.c: 33: LCD8send('A',1);
   421  000134  0E01               	movlw	1
   422  000136  6E23               	movwf	LCD8send@mode,c
   423  000138  0E41               	movlw	65
   424  00013A  ECFD  F000         	call	_LCD8send
   425                           
   426                           ;LCD8.c: 34: LCD8send('M',1);
   427  00013E  0E01               	movlw	1
   428  000140  6E23               	movwf	LCD8send@mode,c
   429  000142  0E4D               	movlw	77
   430  000144  ECFD  F000         	call	_LCD8send
   431                           
   432                           ;LCD8.c: 35: LCD8send('E',1);
   433  000148  0E01               	movlw	1
   434  00014A  6E23               	movwf	LCD8send@mode,c
   435  00014C  0E45               	movlw	69
   436  00014E  ECFD  F000         	call	_LCD8send
   437                           
   438                           ;LCD8.c: 37: LCD8send(0xC0,0);
   439  000152  0E00               	movlw	0
   440  000154  6E23               	movwf	LCD8send@mode,c
   441  000156  0EC0               	movlw	192
   442  000158  ECFD  F000         	call	_LCD8send
   443                           
   444                           ;LCD8.c: 38: LCD8send('#',1);
   445  00015C  0E01               	movlw	1
   446  00015E  6E23               	movwf	LCD8send@mode,c
   447  000160  0E23               	movlw	35
   448  000162  ECFD  F000         	call	_LCD8send
   449  000166  0012               	return		;funcret
   450  000168                     __end_of_LCD8init:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           postdec1	equ	0xFE5
   458                           fsr1l	equ	0xFE1
   459                           
   460 ;; *************** function _LCD8send *****************
   461 ;; Defined at:
   462 ;;		line 41 in file "LCD8.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  c               1    wreg     unsigned char 
   465 ;;  mode            1   34[COMRAM] unsigned char 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  c               1    2[BANK0 ] unsigned char 
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2, status,0, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   477 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Totals:         1       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;Total ram usage:        2 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; Hardware stack levels required when called:    3
   484 ;; This function calls:
   485 ;;		_delay_ms
   486 ;;		_delay_us
   487 ;; This function is called by:
   488 ;;		_LCD8init
   489 ;; This function uses a non-reentrant model
   490 ;;
   491                           
   492                           	psect	text2
   493  0001FA                     __ptext2:
   494                           	opt stack 0
   495  0001FA                     _LCD8send:
   496                           	opt stack 26
   497                           
   498                           ;incstack = 0
   499                           ;LCD8send@c stored from wreg
   500  0001FA  0100               	movlb	0	; () banked
   501  0001FC  6F62               	movwf	LCD8send@c& (0+255),b
   502                           
   503                           ;LCD8.c: 43: LATHbits.LATH2 = mode;
   504  0001FE  B023               	btfsc	LCD8send@mode,0,c
   505  000200  D002               	bra	u235
   506  000202  9490               	bcf	3984,2,c	;volatile
   507  000204  D001               	bra	u236
   508  000206                     u235:
   509  000206  8490               	bsf	3984,2,c	;volatile
   510  000208                     u236:
   511                           
   512                           ;LCD8.c: 44: delay_ms(1);
   513  000208  0E00               	movlw	0
   514  00020A  6E21               	movwf	delay_ms@x+1,c
   515  00020C  0E01               	movlw	1
   516  00020E  6E20               	movwf	delay_ms@x,c
   517  000210  EC1B  F001         	call	_delay_ms	;wreg free
   518                           
   519                           ;LCD8.c: 46: LATE = c;
   520  000214  C062  FF8D         	movff	LCD8send@c,3981	;volatile
   521                           
   522                           ;LCD8.c: 47: LATHbits.LATH0 = 1;
   523  000218  8090               	bsf	3984,0,c	;volatile
   524                           
   525                           ;LCD8.c: 48: delay_us(1);
   526  00021A  0E00               	movlw	0
   527  00021C  6E21               	movwf	delay_us@x+1,c
   528  00021E  0E01               	movlw	1
   529  000220  6E20               	movwf	delay_us@x,c
   530  000222  EC52  F001         	call	_delay_us	;wreg free
   531                           
   532                           ;LCD8.c: 49: LATHbits.LATH0 = 0;
   533  000226  9090               	bcf	3984,0,c	;volatile
   534                           
   535                           ;LCD8.c: 50: delay_us(50);
   536  000228  0E00               	movlw	0
   537  00022A  6E21               	movwf	delay_us@x+1,c
   538  00022C  0E32               	movlw	50
   539  00022E  6E20               	movwf	delay_us@x,c
   540  000230  EC52  F001         	call	_delay_us	;wreg free
   541  000234  0012               	return		;funcret
   542  000236                     __end_of_LCD8send:
   543                           	opt stack 0
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           postdec1	equ	0xFE5
   550                           fsr1l	equ	0xFE1
   551                           
   552 ;; *************** function _delay_us *****************
   553 ;; Defined at:
   554 ;;		line 15 in file "delay.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  x               2   31[COMRAM] int 
   557 ;; Auto vars:     Size  Location     Type
   558 ;;  i               2    0[BANK0 ] int 
   559 ;; Return value:  Size  Location     Type
   560 ;;                  1    wreg      void 
   561 ;; Registers used:
   562 ;;		wreg, status,2, status,0
   563 ;; Tracked objects:
   564 ;;		On entry : 0/0
   565 ;;		On exit  : 0/0
   566 ;;		Unchanged: 0/0
   567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   569 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   570 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   571 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   572 ;;Total ram usage:        5 bytes
   573 ;; Hardware stack levels used:    1
   574 ;; Hardware stack levels required when called:    2
   575 ;; This function calls:
   576 ;;		Nothing
   577 ;; This function is called by:
   578 ;;		_LCD8send
   579 ;;		_SPI_LCD4send
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text3
   584  0002A4                     __ptext3:
   585                           	opt stack 0
   586  0002A4                     _delay_us:
   587                           	opt stack 26
   588                           
   589                           ;delay.c: 17: for (int i = 0; i < x; i++)
   590                           
   591                           ;incstack = 0
   592  0002A4  0E00               	movlw	0
   593  0002A6  0100               	movlb	0	; () banked
   594  0002A8  6F61               	movwf	(delay_us@i+1)& (0+255),b
   595  0002AA  0E00               	movlw	0
   596  0002AC  6F60               	movwf	delay_us@i& (0+255),b
   597  0002AE  D006               	goto	l1058
   598  0002B0                     l184:
   599                           
   600                           ; BSR set to: 0
   601                           ;delay.c: 18: {
   602                           ;delay.c: 19: _delay((unsigned long)((1)*(25000000/4000000.0)));
   603  0002B0  D000               	nop2		;2 cycle nop
   604  0002B2  D000               	nop2		;2 cycle nop
   605  0002B4  D000               	nop2		;2 cycle nop
   606  0002B6  0100               	movlb	0	; () banked
   607  0002B8  4B60               	infsnz	delay_us@i& (0+255),f,b
   608  0002BA  2B61               	incf	(delay_us@i+1)& (0+255),f,b
   609  0002BC                     l1058:
   610                           
   611                           ; BSR set to: 0
   612  0002BC  5020               	movf	delay_us@x,w,c
   613  0002BE  0100               	movlb	0	; () banked
   614  0002C0  5D60               	subwf	delay_us@i& (0+255),w,b
   615  0002C2  0100               	movlb	0	; () banked
   616  0002C4  5161               	movf	(delay_us@i+1)& (0+255),w,b
   617  0002C6  0A80               	xorlw	128
   618  0002C8  6E22               	movwf	??_delay_us& (0+255),c
   619  0002CA  5021               	movf	delay_us@x+1,w,c
   620  0002CC  0A80               	xorlw	128
   621  0002CE  5822               	subwfb	??_delay_us& (0+255),w,c
   622  0002D0  B0D8               	btfsc	status,0,c
   623  0002D2  0012               	return	
   624  0002D4  D7ED               	goto	l184
   625  0002D6                     __end_of_delay_us:
   626                           	opt stack 0
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           status	equ	0xFD8
   635                           
   636 ;; *************** function _delay_ms *****************
   637 ;; Defined at:
   638 ;;		line 7 in file "delay.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;  x               2   31[COMRAM] int 
   641 ;; Auto vars:     Size  Location     Type
   642 ;;  i               2    0[BANK0 ] int 
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   652 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Totals:         3       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;Total ram usage:        5 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    2
   659 ;; This function calls:
   660 ;;		Nothing
   661 ;; This function is called by:
   662 ;;		_LCD8init
   663 ;;		_LCD8send
   664 ;;		_main
   665 ;;		_SPI_LCD4send
   666 ;;		_SPI_LCD4init
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           	psect	text4
   671  000236                     __ptext4:
   672                           	opt stack 0
   673  000236                     _delay_ms:
   674                           	opt stack 28
   675                           
   676                           ;delay.c: 9: for (int i = 0; i < x; i++)
   677                           
   678                           ; BSR set to: 0
   679                           ;incstack = 0
   680  000236  0E00               	movlw	0
   681  000238  0100               	movlb	0	; () banked
   682  00023A  6F61               	movwf	(delay_ms@i+1)& (0+255),b
   683  00023C  0E00               	movlw	0
   684  00023E  6F60               	movwf	delay_ms@i& (0+255),b
   685  000240  D00B               	goto	l177
   686  000242                     l1050:
   687                           
   688                           ; BSR set to: 0
   689                           ;delay.c: 10: {
   690                           ;delay.c: 11: _delay((unsigned long)((1)*(25000000/4000.0)));
   691  000242  0E09               	movlw	9
   692  000244  6E22               	movwf	??_delay_ms& (0+255),c
   693  000246  0E1C               	movlw	28
   694  000248                     u247:
   695  000248  2EE8               	decfsz	wreg,f,c
   696  00024A  D7FE               	goto	u247
   697  00024C  2E22               	decfsz	??_delay_ms& (0+255),f,c
   698  00024E  D7FC               	goto	u247
   699  000250  D000               	nop2	
   700  000252  0100               	movlb	0	; () banked
   701  000254  4B60               	infsnz	delay_ms@i& (0+255),f,b
   702  000256  2B61               	incf	(delay_ms@i+1)& (0+255),f,b
   703  000258                     l177:
   704                           
   705                           ; BSR set to: 0
   706  000258  5020               	movf	delay_ms@x,w,c
   707  00025A  0100               	movlb	0	; () banked
   708  00025C  5D60               	subwf	delay_ms@i& (0+255),w,b
   709  00025E  0100               	movlb	0	; () banked
   710  000260  5161               	movf	(delay_ms@i+1)& (0+255),w,b
   711  000262  0A80               	xorlw	128
   712  000264  6E22               	movwf	??_delay_ms& (0+255),c
   713  000266  5021               	movf	delay_ms@x+1,w,c
   714  000268  0A80               	xorlw	128
   715  00026A  5822               	subwfb	??_delay_ms& (0+255),w,c
   716  00026C  B0D8               	btfsc	status,0,c
   717  00026E  0012               	return	
   718  000270  D7E8               	goto	l1050
   719  000272                     __end_of_delay_ms:
   720                           	opt stack 0
   721                           tblptru	equ	0xFF8
   722                           tblptrh	equ	0xFF7
   723                           tblptrl	equ	0xFF6
   724                           tablat	equ	0xFF5
   725                           postinc0	equ	0xFEE
   726                           wreg	equ	0xFE8
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           status	equ	0xFD8
   730                           
   731 ;; *************** function _LowIsr *****************
   732 ;; Defined at:
   733 ;;		line 26 in file "test.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		None
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   749 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   750 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   751 ;;Total ram usage:       17 bytes
   752 ;; Hardware stack levels used:    1
   753 ;; Hardware stack levels required when called:    1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		Interrupt level 1
   758 ;; This function uses a non-reentrant model
   759 ;;
   760                           
   761                           	psect	intcodelo
   762  000018                     __pintcodelo:
   763                           	opt stack 0
   764  000018                     _LowIsr:
   765                           	opt stack 26
   766                           
   767                           ; BSR set to: 0
   768                           ;incstack = 0
   769  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   770  00001A  CFD8 F00F          	movff	status,??_LowIsr
   771  00001E  CFE8 F010          	movff	wreg,??_LowIsr+1
   772  000022  CFE0 F011          	movff	bsr,??_LowIsr+2
   773  000026  CFFA F012          	movff	pclath,??_LowIsr+3
   774  00002A  CFFB F013          	movff	pclatu,??_LowIsr+4
   775  00002E  CFE9 F014          	movff	fsr0l,??_LowIsr+5
   776  000032  CFEA F015          	movff	fsr0h,??_LowIsr+6
   777  000036  CFE1 F016          	movff	fsr1l,??_LowIsr+7
   778  00003A  CFE2 F017          	movff	fsr1h,??_LowIsr+8
   779  00003E  CFD9 F018          	movff	fsr2l,??_LowIsr+9
   780  000042  CFDA F019          	movff	fsr2h,??_LowIsr+10
   781  000046  CFF3 F01A          	movff	prodl,??_LowIsr+11
   782  00004A  CFF4 F01B          	movff	prodh,??_LowIsr+12
   783  00004E  CFF6 F01C          	movff	tblptrl,??_LowIsr+13
   784  000052  CFF7 F01D          	movff	tblptrh,??_LowIsr+14
   785  000056  CFF8 F01E          	movff	tblptru,??_LowIsr+15
   786  00005A  CFF5 F01F          	movff	tablat,??_LowIsr+16
   787  00005E  C01F  FFF5         	movff	??_LowIsr+16,tablat
   788  000062  C01E  FFF8         	movff	??_LowIsr+15,tblptru
   789  000066  C01D  FFF7         	movff	??_LowIsr+14,tblptrh
   790  00006A  C01C  FFF6         	movff	??_LowIsr+13,tblptrl
   791  00006E  C01B  FFF4         	movff	??_LowIsr+12,prodh
   792  000072  C01A  FFF3         	movff	??_LowIsr+11,prodl
   793  000076  C019  FFDA         	movff	??_LowIsr+10,fsr2h
   794  00007A  C018  FFD9         	movff	??_LowIsr+9,fsr2l
   795  00007E  C017  FFE2         	movff	??_LowIsr+8,fsr1h
   796  000082  C016  FFE1         	movff	??_LowIsr+7,fsr1l
   797  000086  C015  FFEA         	movff	??_LowIsr+6,fsr0h
   798  00008A  C014  FFE9         	movff	??_LowIsr+5,fsr0l
   799  00008E  C013  FFFB         	movff	??_LowIsr+4,pclatu
   800  000092  C012  FFFA         	movff	??_LowIsr+3,pclath
   801  000096  C011  FFE0         	movff	??_LowIsr+2,bsr
   802  00009A  C010  FFE8         	movff	??_LowIsr+1,wreg
   803  00009E  C00F  FFD8         	movff	??_LowIsr,status
   804  0000A2  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   805  0000A4  0010               	retfie	
   806  0000A6                     __end_of_LowIsr:
   807                           	opt stack 0
   808                           pclatu	equ	0xFFB
   809                           pclath	equ	0xFFA
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           prodh	equ	0xFF4
   815                           prodl	equ	0xFF3
   816                           postinc0	equ	0xFEE
   817                           fsr0h	equ	0xFEA
   818                           fsr0l	equ	0xFE9
   819                           wreg	equ	0xFE8
   820                           postdec1	equ	0xFE5
   821                           fsr1h	equ	0xFE2
   822                           fsr1l	equ	0xFE1
   823                           bsr	equ	0xFE0
   824                           fsr2h	equ	0xFDA
   825                           fsr2l	equ	0xFD9
   826                           status	equ	0xFD8
   827                           
   828 ;; *************** function _HighIsr *****************
   829 ;; Defined at:
   830 ;;		line 12 in file "test.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;		None
   835 ;; Return value:  Size  Location     Type
   836 ;;                  1    wreg      void 
   837 ;; Registers used:
   838 ;;		wreg, status,2, status,0
   839 ;; Tracked objects:
   840 ;;		On entry : 0/0
   841 ;;		On exit  : 0/0
   842 ;;		Unchanged: 0/0
   843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   848 ;;Total ram usage:       14 bytes
   849 ;; Hardware stack levels used:    1
   850 ;; This function calls:
   851 ;;		Nothing
   852 ;; This function is called by:
   853 ;;		Interrupt level 2
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           	psect	intcode
   858  000008                     __pintcode:
   859                           	opt stack 0
   860  000008                     _HighIsr:
   861                           	opt stack 26
   862                           
   863                           ;incstack = 0
   864  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   865  00000A  CFFA F001          	movff	pclath,??_HighIsr
   866  00000E  CFFB F002          	movff	pclatu,??_HighIsr+1
   867  000012  EFB4  F000         	goto	int_func
   868                           pclatu	equ	0xFFB
   869                           pclath	equ	0xFFA
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           prodh	equ	0xFF4
   875                           prodl	equ	0xFF3
   876                           postinc0	equ	0xFEE
   877                           fsr0h	equ	0xFEA
   878                           fsr0l	equ	0xFE9
   879                           wreg	equ	0xFE8
   880                           postdec1	equ	0xFE5
   881                           fsr1h	equ	0xFE2
   882                           fsr1l	equ	0xFE1
   883                           bsr	equ	0xFE0
   884                           fsr2h	equ	0xFDA
   885                           fsr2l	equ	0xFD9
   886                           status	equ	0xFD8
   887                           
   888                           	psect	intcode_body
   889  000168                     __pintcode_body:
   890                           	opt stack 26
   891  000168                     int_func:
   892                           	opt stack 26
   893  000168  CFE9 F003          	movff	fsr0l,??_HighIsr+2
   894  00016C  CFEA F004          	movff	fsr0h,??_HighIsr+3
   895  000170  CFE1 F005          	movff	fsr1l,??_HighIsr+4
   896  000174  CFE2 F006          	movff	fsr1h,??_HighIsr+5
   897  000178  CFD9 F007          	movff	fsr2l,??_HighIsr+6
   898  00017C  CFDA F008          	movff	fsr2h,??_HighIsr+7
   899  000180  CFF3 F009          	movff	prodl,??_HighIsr+8
   900  000184  CFF4 F00A          	movff	prodh,??_HighIsr+9
   901  000188  CFF6 F00B          	movff	tblptrl,??_HighIsr+10
   902  00018C  CFF7 F00C          	movff	tblptrh,??_HighIsr+11
   903  000190  CFF8 F00D          	movff	tblptru,??_HighIsr+12
   904  000194  CFF5 F00E          	movff	tablat,??_HighIsr+13
   905                           
   906                           ;test.c: 14: if(PIR3bits.TMR4IF==1)
   907  000198  A6A4               	btfss	4004,3,c	;volatile
   908  00019A  D011               	goto	i2l95
   909                           
   910                           ;test.c: 15: {
   911                           ;test.c: 16: counter++;
   912  00019C  4A3C               	infsnz	_counter,f,c
   913  00019E  2A3D               	incf	_counter+1,f,c
   914                           
   915                           ;test.c: 17: if (counter>=1000)
   916  0001A0  BE3D               	btfsc	_counter+1,7,c
   917  0001A2  D00C               	goto	i2l926
   918  0001A4  0EE8               	movlw	232
   919  0001A6  5C3C               	subwf	_counter,w,c
   920  0001A8  0E03               	movlw	3
   921  0001AA  583D               	subwfb	_counter+1,w,c
   922  0001AC  A0D8               	btfss	status,0,c
   923  0001AE  D006               	goto	i2l926
   924                           
   925                           ;test.c: 18: {
   926                           ;test.c: 19: sec++;
   927  0001B0  4A3E               	infsnz	_sec,f,c
   928  0001B2  2A3F               	incf	_sec+1,f,c
   929                           
   930                           ;test.c: 20: counter=0;
   931  0001B4  0E00               	movlw	0
   932  0001B6  6E3D               	movwf	_counter+1,c
   933  0001B8  0E00               	movlw	0
   934  0001BA  6E3C               	movwf	_counter,c
   935  0001BC                     i2l926:
   936                           
   937                           ;test.c: 21: }
   938                           ;test.c: 22: PIR3bits.TMR4IF = 0;
   939  0001BC  96A4               	bcf	4004,3,c	;volatile
   940  0001BE                     i2l95:
   941  0001BE  C00E  FFF5         	movff	??_HighIsr+13,tablat
   942  0001C2  C00D  FFF8         	movff	??_HighIsr+12,tblptru
   943  0001C6  C00C  FFF7         	movff	??_HighIsr+11,tblptrh
   944  0001CA  C00B  FFF6         	movff	??_HighIsr+10,tblptrl
   945  0001CE  C00A  FFF4         	movff	??_HighIsr+9,prodh
   946  0001D2  C009  FFF3         	movff	??_HighIsr+8,prodl
   947  0001D6  C008  FFDA         	movff	??_HighIsr+7,fsr2h
   948  0001DA  C007  FFD9         	movff	??_HighIsr+6,fsr2l
   949  0001DE  C006  FFE2         	movff	??_HighIsr+5,fsr1h
   950  0001E2  C005  FFE1         	movff	??_HighIsr+4,fsr1l
   951  0001E6  C004  FFEA         	movff	??_HighIsr+3,fsr0h
   952  0001EA  C003  FFE9         	movff	??_HighIsr+2,fsr0l
   953  0001EE  C002  FFFB         	movff	??_HighIsr+1,pclatu
   954  0001F2  C001  FFFA         	movff	??_HighIsr,pclath
   955  0001F6  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   956  0001F8  0011               	retfie		f
   957  0001FA                     __end_of_HighIsr:
   958                           	opt stack 0
   959  0000                     pclatu	equ	0xFFB
   960                           pclath	equ	0xFFA
   961                           tblptru	equ	0xFF8
   962                           tblptrh	equ	0xFF7
   963                           tblptrl	equ	0xFF6
   964                           tablat	equ	0xFF5
   965                           prodh	equ	0xFF4
   966                           prodl	equ	0xFF3
   967                           postinc0	equ	0xFEE
   968                           fsr0h	equ	0xFEA
   969                           fsr0l	equ	0xFE9
   970                           wreg	equ	0xFE8
   971                           postdec1	equ	0xFE5
   972                           fsr1h	equ	0xFE2
   973                           fsr1l	equ	0xFE1
   974                           bsr	equ	0xFE0
   975                           fsr2h	equ	0xFDA
   976                           fsr2l	equ	0xFD9
   977                           status	equ	0xFD8
   978                           pclatu	equ	0xFFB
   979                           pclath	equ	0xFFA
   980                           tblptru	equ	0xFF8
   981                           tblptrh	equ	0xFF7
   982                           tblptrl	equ	0xFF6
   983                           tablat	equ	0xFF5
   984                           prodh	equ	0xFF4
   985                           prodl	equ	0xFF3
   986                           postinc0	equ	0xFEE
   987                           fsr0h	equ	0xFEA
   988                           fsr0l	equ	0xFE9
   989                           wreg	equ	0xFE8
   990                           postdec1	equ	0xFE5
   991                           fsr1h	equ	0xFE2
   992                           fsr1l	equ	0xFE1
   993                           bsr	equ	0xFE0
   994                           fsr2h	equ	0xFDA
   995                           fsr2l	equ	0xFD9
   996                           status	equ	0xFD8
   997                           
   998                           	psect	rparam
   999  0000                     pclatu	equ	0xFFB
  1000                           pclath	equ	0xFFA
  1001                           tblptru	equ	0xFF8
  1002                           tblptrh	equ	0xFF7
  1003                           tblptrl	equ	0xFF6
  1004                           tablat	equ	0xFF5
  1005                           prodh	equ	0xFF4
  1006                           prodl	equ	0xFF3
  1007                           postinc0	equ	0xFEE
  1008                           fsr0h	equ	0xFEA
  1009                           fsr0l	equ	0xFE9
  1010                           wreg	equ	0xFE8
  1011                           postdec1	equ	0xFE5
  1012                           fsr1h	equ	0xFE2
  1013                           fsr1l	equ	0xFE1
  1014                           bsr	equ	0xFE0
  1015                           fsr2h	equ	0xFDA
  1016                           fsr2l	equ	0xFD9
  1017                           status	equ	0xFD8
  1018                           
  1019                           	psect	temp
  1020  000040                     btemp:
  1021                           	opt stack 0
  1022  000040                     	ds	1
  1023  0000                     int$flags	set	btemp
  1024                           pclatu	equ	0xFFB
  1025                           pclath	equ	0xFFA
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           prodh	equ	0xFF4
  1031                           prodl	equ	0xFF3
  1032                           postinc0	equ	0xFEE
  1033                           fsr0h	equ	0xFEA
  1034                           fsr0l	equ	0xFE9
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           fsr1h	equ	0xFE2
  1038                           fsr1l	equ	0xFE1
  1039                           bsr	equ	0xFE0
  1040                           fsr2h	equ	0xFDA
  1041                           fsr2l	equ	0xFD9
  1042                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      63
    BANK0           160      3       3
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          128      0       0
    BANK15           96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _LCD8init->_LCD8send
    _LCD8send->_delay_ms
    _LCD8send->_delay_us

Critical Paths under _LowIsr in COMRAM

    None.

Critical Paths under _HighIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    _LCD8init->_LCD8send
    _LCD8send->_delay_ms
    _LCD8send->_delay_us

Critical Paths under _LowIsr in BANK0

    None.

Critical Paths under _HighIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowIsr in BANK1

    None.

Critical Paths under _HighIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowIsr in BANK2

    None.

Critical Paths under _HighIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowIsr in BANK3

    None.

Critical Paths under _HighIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowIsr in BANK4

    None.

Critical Paths under _HighIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowIsr in BANK5

    None.

Critical Paths under _HighIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowIsr in BANK6

    None.

Critical Paths under _HighIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowIsr in BANK7

    None.

Critical Paths under _HighIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _LowIsr in BANK8

    None.

Critical Paths under _HighIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _LowIsr in BANK9

    None.

Critical Paths under _HighIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _LowIsr in BANK10

    None.

Critical Paths under _HighIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _LowIsr in BANK11

    None.

Critical Paths under _HighIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _LowIsr in BANK12

    None.

Critical Paths under _HighIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _LowIsr in BANK13

    None.

Critical Paths under _HighIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _LowIsr in BANK14

    None.

Critical Paths under _HighIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _LowIsr in BANK15

    None.

Critical Paths under _HighIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2548
                           _LCD8init
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _LCD8init                                             0     0      0    2102
                           _LCD8send
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD8send                                             2     1      1    1656
                                             34 COMRAM     1     0      1
                                              2 BANK0      1     1      0
                           _delay_ms
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             5     3      2     338
                                             31 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     446
                                             31 COMRAM     3     1      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _LowIsr                                              17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighIsr                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD8init
     _LCD8send
       _delay_ms
       _delay_us
     _delay_ms
   _delay_ms

 _LowIsr (ROOT)

 _HighIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E7F      0       0      38        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      30        0.0%
BANK12             100      0       0      28        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3       3       5        1.9%
BITBANK14           80      0       0      33        0.0%
BANK14              80      0       0      34        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BIGRAM_1            60      0       0      37        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      3F       1       67.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      29        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Mon Jul 31 15:57:06 2017

                     bsr 000FE0                      l184 02B0                      l177 0258  
                    u235 0206                      u236 0208                      u247 0248  
                    _sec 003E                      wreg 000FE8               _TXSTA1bits 000FAC  
           __CFG_FOSC$HS 000000             __CFG_WDT$OFF 000000                     l1050 0242  
                   l1058 02BC                     _LATD 000F8C                     _LATE 000F8D  
                   i2l95 01BE                     _main 02EE                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0040  
                   pclat 000FFA                     prodh 000FF4                     prodl 000FF3  
                   start 00A6          __end_of_HighIsr 01FA             ___param_bank 000010  
       __end_of_LCD8init 0168         __end_of_LCD8send 0236                    ?_main 0001  
                  i2l926 01BC                    _PORTD 000F83                    _TRISD 000F95  
                  _TRISE 000F96                    _TRISH 000F99          clr_screen@F6532 0034  
                  tablat 000FF5                    status 000FD8          __initialization 0272  
           __end_of_main 0302                   ??_main 0024            __activetblptr 000000  
                 _SPBRG1 000FAF                ??_HighIsr 0001                   _TXREG1 000FAD  
                 _TXSTA1 000FAC         __end_of_delay_ms 0272         __end_of_delay_us 02D6  
         __CFG_XINST$OFF 000000                   _LowIsr 0018             __pdataCOMRAM 0024  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              LCD8send@c 0062                ?_LCD8init 0001                ?_LCD8send 0023  
             __accesstop 0060  __end_of__initialization 029A            ___rparam_used 000001  
         __pcstackCOMRAM 0001               ??_LCD8init 0024               ??_LCD8send 0024  
                ?_LowIsr 0001                ?_delay_ms 0020                ?_delay_us 0020  
                _SSP1BUF 000FC9                  _HighIsr 0008                  __Hparam 0000  
                __Lparam 0000          __size_of_LowIsr 008E                  __pcinit 0272  
                __ramtop 1000                  __ptext0 02EE                  __ptext1 00AA  
                __ptext2 01FA                  __ptext3 02A4                  __ptext4 0236  
                _counter 003C               ??_delay_ms 0022               ??_delay_us 0022  
         __pintcode_body 0168     end_of_initialization 029A                  int_func 0168  
              _RCSTAbits 000FAB                  postdec1 000FE5                  postinc0 000FEE  
              _TRISCbits 000F94        __size_of_LCD8init 00BE        __size_of_LCD8send 003C  
         __end_of_LowIsr 00A6            __pidataCOMRAM 02D6      start_initialization 0272  
               ??_LowIsr 000F              __pbssCOMRAM 003C            __pcstackBANK0 0060  
      __size_of_delay_ms 003C        __size_of_delay_us 0032                 ?_HighIsr 0001  
              __pintcode 0008              __pintcodelo 0018                 _BAUDCON1 000F7E  
               _LCD8init 00AA                _scan_code 0024                 _LCD8send 01FA  
               _LATCbits 000F8B                delay_ms@i 0060                delay_ms@x 0020  
               _LATHbits 000F90                delay_us@i 0060                delay_us@x 0020  
               _IPR1bits 000F9F                 _PIE1bits 000F9D                 _IPR3bits 000FA5  
               _PIE3bits 000FA3                 _PIR1bits 000F9E                 _PIR3bits 000FA4  
               _RCONbits 000FD0                 _SSP1CON1 000FC6                copy_data0 028E  
       __size_of_HighIsr 01F2                 __Hrparam 0000                 __Lrparam 0000  
       cursor_home@F6537 0038                 _delay_ms 0236                 _delay_us 02A4  
          __size_of_main 0014                 int$flags 0040             _SSP1STATbits 000FC7  
             _INTCONbits 000FF2                 intlevel1 0000                 intlevel2 0000  
             _RCSTA1bits 000FAB             LCD8send@mode 0023  
